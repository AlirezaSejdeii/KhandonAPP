@page "/SocietyStatus"

<PageTitle>آمار جامعه</PageTitle>

@if (loading == false)
{
    @if (IsShowAlert)
    {
        <MudAlert Severity="Severity.Normal" Dense="true" ContentAlignment="HorizontalAlignment.Center" AlertTextPosition="AlertTextPosition.Center" CloseIconClicked=CloseAlert ShowCloseIcon=true Class="my-2">در این صفحه شما میتوانید اطلاعاتی از میانگین های مطالعات جامعه خاندون را مشاهده کنید.</MudAlert>
    }
    @if (IsDataLoaded == true)
    {

        <MudGrid Class="pa-2">

            <MudItem xs="12" Class="mb-n3">
                <MudText Typo="Typo.subtitle2">
                    افراد حاظر در جامعه خاندون
                </MudText>
            </MudItem>
            <MudItem xs="12" sm="12">
                <MudCard Elevation="2" Class="pa-2">
                    <MudText Align="Align.Center" Typo="Typo.h5">
                        #@societyStatusDto.AllUsersCount نفر
                    </MudText>
                </MudCard>
            </MudItem>

            <MudItem xs="12" Class="mb-n3">
                <MudText Typo="Typo.subtitle2">
                    رتبه شما در جامعه خاندون
                </MudText>
            </MudItem>
            <MudItem xs="12" sm="12">
                <MudCard Elevation="2" Class="pa-2">
                    <MudText Align="Align.Center" Typo="Typo.h5">
                        #@societyStatusDto.UserRank
                    </MudText>
                </MudCard>
            </MudItem>

            @*<MudItem xs="12" Class="mb-n3">
    <MudText Typo="Typo.subtitle2">
    کل مطالعات ثبت شده
    </MudText>
    </MudItem>
    <MudItem xs="12" sm="12">
    <MudCard Elevation="2" Class="pa-2">
    <MudText Align="Align.Center" Typo="Typo.h5">
    @societyStatusDto.AllStudiesCount
    </MudText>
    </MudCard>
    </MudItem>*@

            <MudItem xs="12" Class="mb-n3">
                <MudText Typo="Typo.subtitle2">
                    جمع مطالعات کاربران
                </MudText>
            </MudItem>

            <MudItem xs="12" sm="12">
                <MudGrid>
                    <MudItem xs="6">
                        <MudCard Elevation="2" Class="pa-2">
                            <MudText Align="Align.Center">
                                @societyStatusDto.SumStudiesMinut دقیقه
                            </MudText>
                        </MudCard>
                    </MudItem>
                    <MudItem xs="6">
                        <MudCard Elevation="2" Class="pa-2">
                            <MudText Align="Align.Center">
                                @societyStatusDto.SumStudiesPage صفحه
                            </MudText>
                        </MudCard>
                    </MudItem>
                </MudGrid>
            </MudItem>

            <MudItem xs="12" Class="mb-n3">
                <MudText Typo="Typo.subtitle2">
                    میانگین مطالعه روزانه
                </MudText>
            </MudItem>

            <MudItem xs="12" sm="12">
                <MudGrid>
                    <MudItem xs="6">
                        <MudCard Elevation="2" Class="pa-2">
                            <MudText Align="Align.Center">
                                @societyStatusDto.AvgStudyPerDayMinute دقیقه
                            </MudText>
                        </MudCard>
                    </MudItem>
                    <MudItem xs="6">
                        <MudCard Elevation="2" Class="pa-2">
                            <MudText Align="Align.Center">
                                @societyStatusDto.AvgStudyPerDayPage صفحه
                            </MudText>
                        </MudCard>
                    </MudItem>
                </MudGrid>
            </MudItem>

            <MudItem xs="12" Class="mb-n3">
                <MudText Typo="Typo.subtitle2">
                    مقیاس دشواری مطالعات
                </MudText>
            </MudItem>
            <MudItem xs="12" sm="12">
                <DIficaltySlider InitialValue="@societyStatusDto.AvgDificalty" Disable=true></DIficaltySlider>
            </MudItem>


            <MudItem xs="12" Class="mb-n3">
                <MudText Typo="Typo.subtitle2">
                    موضوعات مورد مطالعه
                </MudText>
            </MudItem>

            <MudGrid Class="d-flex align-center justify-center">
                <MudItem xs="12" sm="6">
                    <MudSimpleTable Style="overflow-x: auto;" Dense=true Hover=true Striped=true>
                        <thead>
                            <tr>
                                <th>
                                    موضوع
                                </th>
                                <th>
                                    درصد
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in societyStatusDto.ActiveStudyGroup)
                            {
                                <tr>
                                    <td>@item.Key</td>
                                    <td>@item.Value</td>
                                </tr>
                            }
                        </tbody>
                    </MudSimpleTable>
                </MudItem>

                <MudItem xs="12" sm="6">
                    <MudChart ChartType="ChartType.Pie"
                      LegendPosition="Position.Top"
                      InputData="@data.ToArray()"
                      InputLabels="@labelsCatgories.ToArray()"
                      Width="100%"></MudChart>
                </MudItem>
            </MudGrid>

            <MudGrid Class="d-flex align-center justify-center">
                <MudItem xs="12" sm="12">
                    <MudRadioGroup SelectedOption="RadioSize"
                           SelectedOptionChanged=TimeFrameChanged
                           T="ReadingActivityDateEnum"
                           Style="text-align:center;margin-bottom:-24px;margin-top:60px;">
                        <MudRadio Option="ReadingActivityDateEnum.DAY" Color="Color.Info" Size="Size.Large">روز</MudRadio>
                        <MudRadio Option="ReadingActivityDateEnum.WEEK" Color="Color.Info" Size="Size.Large">هفته</MudRadio>
                        <MudRadio Option="ReadingActivityDateEnum.MONTH" Color="Color.Info" Size="Size.Large">ماه</MudRadio>
                    </MudRadioGroup>
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudSimpleTable Style="overflow-x: auto;" Dense=true Hover=true Striped=true>
                        <thead>
                            <tr>
                                <th>
                                    @periodTimeName
                                </th>
                                <th>
                                    صفحه
                                </th>
                                <th>
                                    دقیقه
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in activieReads)
                            {
                                <tr>
                                    <td>@item.Data</td>
                                    <td>@item.LengthPage</td>
                                    <td>@item.LengthMinut</td>
                                </tr>
                            }
                        </tbody>
                    </MudSimpleTable>
                </MudItem>

                <MudItem xs="12" sm="6">
                    <MudChart ChartType="ChartType.Bar"
                      LegendPosition="Position.Top"
                      ChartSeries="Series"
                      XAxisLabels="labels.ToArray()"
                      Style="font-size:18px"
                      Width="100%"></MudChart>
                </MudItem>
            </MudGrid>


        </MudGrid>
    }
}

else
{
    <MudSkeleton Animation="Animation.Wave" SkeletonType="SkeletonType.Rectangle" Height="100px" Class="mt-6" />
    <MudSkeleton Animation="Animation.Wave" SkeletonType="SkeletonType.Rectangle" Height="100px" Class="mt-6" />
    <MudSkeleton Animation="Animation.Wave" SkeletonType="SkeletonType.Rectangle" Height="100px" Class="mt-6" />
    <MudSkeleton Animation="Animation.Wave" SkeletonType="SkeletonType.Rectangle" Height="100px" Class="mt-6" />
    <MudSkeleton Animation="Animation.Wave" SkeletonType="SkeletonType.Rectangle" Height="100px" Class="mt-6" />

    <MudGrid>
        <MudItem sm="6">
            <MudSkeleton Animation="Animation.Wave" SkeletonType="SkeletonType.Rectangle" Height="300px" Class="mt-6" />
        </MudItem>
        <MudItem sm="6">
            <MudSkeleton Animation="Animation.Wave" SkeletonType="SkeletonType.Rectangle" Height="300px" Class="mt-6" />
        </MudItem>
    </MudGrid>
    <MudSkeleton Animation="Animation.Wave" SkeletonType="SkeletonType.Rectangle" Height="60px" Class="mt-6" />
    <MudGrid>
        <MudItem sm="6">
            <MudSkeleton Animation="Animation.Wave" SkeletonType="SkeletonType.Rectangle" Height="300px" Class="mt-6" />
        </MudItem>
        <MudItem sm="6">
            <MudSkeleton Animation="Animation.Wave" SkeletonType="SkeletonType.Rectangle" Height="300px" Class="mt-6" />
        </MudItem>
    </MudGrid>

}
@code {
    bool IsShowAlert = true;
    [Inject] public Blazored.LocalStorage.ILocalStorageService localStorage { get; set; }
    [Inject] public BookStateService bookStateService { get; set; }
    [Inject] public ISnackbar snackbar { get; set; }


    SocietyStatusDto societyStatusDto = new();
    bool loading = false;
    bool IsDataLoaded = false;

    public List<double> data = new();
    public List<string> labelsCatgories = new();

    public List<string> labels = new();
    //{ "تیر", "خرداد", "اردیبهشت", "فروردین" };
    public List<ChartSeries> Series = new List<ChartSeries>()
    {
        //new ChartSeries() { Name = "مطالعات", Data = new double[] { 10, 20, 45, 25 } }
    };
    string periodTimeName = "روز";
    List<StatusActiveReadsDto> activieReads = new();
    //ReadingActivityDateEnum Radio_Size = ReadingActivityDateEnum.WEEK;

    ReadingActivityDateEnum RadioSize = ReadingActivityDateEnum.MONTH;
    protected override async Task OnInitializedAsync()
    {
        await TimeFrameChanged(RadioSize);

        await handleMessage();

        loading = true;
        //IsDataLoaded = false;
        
        var result = await bookStateService.GetSocietyStatus();
        //masure any data exsit
        if (result.ActiveStudyGroup==null)
        {
            snackbar.Add("اطلاعاتی وجود ندارد",Severity.Warning);
            IsDataLoaded = false;
            loading=false;

            return;
        }
        if (result != null)
        {
            IsDataLoaded = true;
            societyStatusDto = result;

            foreach (var item in result.ActiveStudyGroup)
            {
                data.Add(item.Value);
                labelsCatgories.Add(item.Key);
            }
        }
        loading = false;
    }



    async Task TimeFrameChanged(ReadingActivityDateEnum time)
    {
        Console.WriteLine(time.ToString());
        RadioSize = time;
        try
        {
            switch (time)
            {
                case ReadingActivityDateEnum.DAY:
                    periodTimeName = "روز";
                    break;
                case ReadingActivityDateEnum.WEEK:
                    periodTimeName = "هفته";
                    break;
                case ReadingActivityDateEnum.MONTH:
                    periodTimeName = "ماه";
                    break;
            }

            labels = new();
            Series = new();
            StateHasChanged();
            loading = true;

            var result = await bookStateService.GetPeriodTimeSocityActivityAsync(10, time);
            if (result != null)
            {
                activieReads = result;
            }
            else
            {
                activieReads = new();
            }
            Series.Add(new()
                {
                    Name = "دقیقه",
                    Data = activieReads.Select(a => a.LengthMinut).ToArray()
                });
            Series.Add(new()
                {
                    Name = "متن",
                    Data = activieReads.Select(a => a.LengthPage).ToArray()
                });
            labels.AddRange(activieReads.Select(a => a.Label));
            loading = false;
        }
        catch (Exception e)
        {
            snackbar.Add("بارگذاری بخش مطالعات با خطا مواجه شد", Severity.Error);
        }
    }


    async Task handleMessage()
    {
        string darked = await localStorage.GetItemAsStringAsync("IsShowAlertInSocietyStatus");
        if (string.IsNullOrEmpty(darked))
        {
            IsShowAlert = true;
        }
        else
        {

            switch (darked)
            {
                case "true":
                    IsShowAlert = true;
                    break;
                case "True":
                    IsShowAlert = true;
                    break;
                case "false":
                    IsShowAlert = false;
                    break;
                case "False":
                    IsShowAlert = false;
                    break;
                default:
                    IsShowAlert = true;
                    break;
            }
        }
    }

    async Task CloseAlert()
    {
        if (await localStorage.ContainKeyAsync("IsShowAlertInSocietyStatus"))
        {
            await localStorage.RemoveItemAsync("IsShowAlertInSocietyStatus");
        }

        IsShowAlert = false;
        StateHasChanged();
        await localStorage.SetItemAsStringAsync("IsShowAlertInSocietyStatus", IsShowAlert.ToString());
    }

}
