@page "/Account/RecoveryPasswordConfirm"

<AccountLyout PageTitle="کلمه عبور جدید را وارد کنید " Loading=loading>
    <PageForm>
        <EditForm Model="confirmViewModel" OnValidSubmit="RecoveryUserpasswordConfirm">

            <FluentValidationValidator></FluentValidationValidator>

            <MudTextField For="(()=> confirmViewModel.NewPassword)"
                          @bind-Value="confirmViewModel.NewPassword"
                          InputType="InputType.Password"
                          Label="کلمه عبور جدید"></MudTextField>
            <br />
            <MudButton ButtonType="ButtonType.Submit" FullWidth Color="Color.Primary" Variant="Variant.Outlined">
                تعغیر کلمه عبور
            </MudButton>
        </EditForm>
    </PageForm>
</AccountLyout>

@code {
    [Inject]
    public UserStateService userStateService { get; set; }
    [Inject]
    public NavigationManager navigationManager { get; set; }
    bool loading = false;
    RecoveryPasswordConfirmViewModel confirmViewModel = new();
    protected override async Task OnInitializedAsync()
    {

        var query = System.Web.HttpUtility.ParseQueryString(navigationManager.ToAbsoluteUri(navigationManager.Uri).Query, System.Text.Encoding.UTF8);
        string token = query.GetValues("token").FirstOrDefault();
        string email = query.GetValues("email").FirstOrDefault();

        confirmViewModel.EmailOrUsername = email;
        confirmViewModel.Token = token;

        //ToDo: Get Email And Token From Query Paramter
        Console.WriteLine($"email is: {email} \n token is: {token}");

    }

    async Task RecoveryUserpasswordConfirm()
    {
        loading = true;
        userStateService.RecoveryPasswordConfirm(confirmViewModel);
        loading = false;
    }
}
